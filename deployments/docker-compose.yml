version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
      target: development
    command: ./api
    ports:
      - "8080:8080"
    environment:
      - ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=ecommerce
      - MONGO_URI=mongodb://mongodb:27017
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URI=redis:6379
    depends_on:
      - postgres
      - mongodb
      - rabbitmq
      - redis
    volumes:
      - ..:/app
    networks:
      - ecommerce-network

  worker:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
      target: development
    command: ./worker
    environment:
      - ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=ecommerce
      - MONGO_URI=mongodb://mongodb:27017
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URI=redis:6379
    depends_on:
      - postgres
      - mongodb
      - rabbitmq
      - redis
    volumes:
      - ..:/app
    networks:
      - ecommerce-network

  saga-orchestrator:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
      target: development
    command: ./saga-orchestrator
    environment:
      - ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=ecommerce
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ..:/app
    networks:
      - ecommerce-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ecommerce
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - ecommerce-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ecommerce-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecommerce-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - ecommerce-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - ecommerce-network

volumes:
  postgres_data:
  mongodb_data:
  rabbitmq_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  ecommerce-network:
    driver: bridge 